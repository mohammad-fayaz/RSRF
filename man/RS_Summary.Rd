% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RSRF_Version_1_0.R
\name{RS_Summary}
\alias{RS_Summary}
\title{Summary of Random Splitting Random Forest SRC for Hybrid Data}
\usage{
RS_Summary(
  Dataset = RF_OUTPUT,
  Outcome_Type = c("Continuous", "Categorical", "Survival")
)
}
\arguments{
\item{Dataset}{The 'RF_OUTPUT$Result' from `RS_RF_SRC_H`.}

\item{Outcome_Type}{The output type : `Continuous`, `Categorical` and `Survival`.}
}
\value{
It produces the model performance based on the type of outcome.
                       \item Categorical
                       \item \item Accuracy (Mean, SD, Q1, Q3) for Train and Test.
                       \item \item Sensitivity (Mean, SD, Q1, Q3) for Train and Test.
                       \item \item Specificity (Mean, SD, Q1, Q3) for Train and Test.
                       \item Continuous
                       \item \item MSE (Mean, SD) for Train and Test.
                       \item \item RQR (Mean, SD) for Train and Test.
                       \item Survival
                       \item \item MSE (Mean, SD) for Train and Test.
                       \item \item RQR (Mean, SD) for Train and Test.
                       \item \item Harrell_C_Index (Mean, SD) for Train and Test.
}
\description{
The summary of Bagging (MD-BG)  and Random Forest  (MD-RF)
}
\details{
It summarizes the random forest output.
}
\examples{
 #Simulation
  nSample_1 <- nSample_2 <- 100
  SIM_1_FUNC_DATA <- makeSIMData(nSS_1 = nSample_1,nSS_2 = nSample_2, responseType =c("Survival"),Seed= 2400)
  ## Survival
  time  <- c(SIM_1_FUNC_DATA[[6]])
  event <- c(SIM_1_FUNC_DATA[[7]])
  Ys <- data.frame(time,event)
   FDList <- list()
   FDList[[1]] <- SIM_1_FUNC_DATA[[1]]
   FDList[[2]] <- SIM_1_FUNC_DATA[[2]]
   FDList[[3]] <- SIM_1_FUNC_DATA[[3]]
   FDList[[4]] <- SIM_1_FUNC_DATA[[4]]
   ## Parameter Specification for each Functioanl Covariate
   Min <- list()
   Max <- list()
   PARAMS_1 <- list()
   DIST_1 <- list()
   TYPE <- list()
   PARAMS_2 <- list()
   STATS <- list()
   DIST_2 <- list()
   ### Functional Covariate 1 Specificaion
   Min[[1]] <- 1                    ## minimum time domain
   Max[[1]] <- 100                  ## maximum time domain
   DIST_1[[1]] <- c("Exponential")  ## The Random splitting distribution
   PARAMS_1[[1]] <- c(0.1,0,0)      ## The parameter for the distribution
   TYPE[[1]] <- c("Disjoint")       ## Type of splitting
   DIST_2[[1]] <- c("")             ## if type is overlap , the distribution of the overlap
   PARAMS_2[[1]] <- c(0,0,0)        ## if type is overlap , the parameter of the distribution
   STATS[[1]]<- c("mean")          ## the statistics for each interval
   ### Functional Covariate 2 Specificaion
   Min[[2]] <- 1                    ## minimum time domain
   Max[[2]] <- 100                  ## maximum time domain
   DIST_1[[2]] <- c("Exponential")  ## The Random splitting distribution
   PARAMS_1[[2]] <- c(0.1,0,0)      ## The parameter for the distribution
   TYPE[[2]] <- c("Disjoint")       ## Type of splitting
   DIST_2[[2]] <- c("")             ## if type is overlap , the distribution of the overlap
   PARAMS_2[[2]] <- c(0,0,0)        ## if type is overlap , the parameter of the distribution
   STATS[[2]]<- c("mean")          ## the statistics for each interval
   ### Functional Covariate 3 Specificaion
   Min[[3]] <- 1                    ## minimum time domain
   Max[[3]] <- 100                  ## maximum time domain
   DIST_1[[3]] <- c("Exponential")  ## The Random splitting distribution
   PARAMS_1[[3]] <- c(0.1,0,0)      ## The parameter for the distribution
   TYPE[[3]] <- c("Disjoint")       ## Type of splitting
   DIST_2[[3]] <- c("")             ## if type is overlap , the distribution of the overlap
   PARAMS_2[[3]] <- c(0,0,0)        ## if type is overlap , the parameter of the distribution
   STATS[[3]]<- c("mean")          ## the statistics for each interval
   ### Functional Covariate 4 Specificaion
   Min[[4]] <- 1                    ## minimum time domain
   Max[[4]] <- 100                  ## maximum time domain
   DIST_1[[4]] <- c("Exponential")  ## The Random splitting distribution
   PARAMS_1[[4]] <- c(0.1,0,0)      ## The parameter for the distribution
   TYPE[[4]] <- c("Disjoint")       ## Type of splitting
   DIST_2[[4]] <- c("")             ## if type is overlap , the distribution of the overlap
   PARAMS_2[[4]] <- c(0,0,0)        ## if type is overlap , the parameter of the distribution
   STATS[[4]]<- c("mean")          ## the statistics for each interval
   ## Non-Functional Covariate Specifications
   Covariates_all <- data.frame(c_01= SIM_1_FUNC_DATA[[5]][,1],c_02= SIM_1_FUNC_DATA[[5]][,2])
   ## Categorical Response 
   BG_Res <- RS_RF_SRC_H(
   ResponseVar=as.factor(Ys[,2]),
   Covariates=Covariates_all,
   RawData=FDList,
   Stat=STATS ,
   min=Min,
   max=Max,
   Params=PARAMS_1,
   Distribution=DIST_1,
   Params2=PARAMS_2,
   Distribution2=DIST_2,
   type=TYPE,
   m=100,
   k=50,
   ResponseType="Categorical",
   RFMethod = c("Bagging"),
   NUM_Covariates=1,
   Block.Size = 10 ,
   SplitRule = c("gini"),
   Importance= TRUE,
   Ensemble = c("all"),
   Proximity = TRUE,
   VIP_Algorithm = c("RS"))
   ### Summary 
   RS_Summary(Dataset =BG_Res$Result , Outcome_Type = c("Categorical"))
   
   ## Continuous Response 
   BG_Res <- RS_RF_SRC_H(
   ResponseVar=Ys[,1],
   Covariates=Covariates_all,
   RawData=FDList,
   Stat=STATS ,
   min=Min,
   max=Max,
   Params=PARAMS_1,
   Distribution=DIST_1,
   Params2=PARAMS_2,
   Distribution2=DIST_2,
   type=TYPE,
   m=100,
   k=50,
   ResponseType="Continuous",
   RFMethod = c("Bagging"),
   NUM_Covariates=1,
   Block.Size = 10 ,
   SplitRule = c("mse"),
   Importance= TRUE,
   Ensemble = c("all"),
   Proximity = TRUE,
   VIP_Algorithm = c("RS"))
   ### Summary 
   RS_Summary(Dataset =BG_Res$Result , Outcome_Type = c("Continuous"))
  
   ## Survival Response 
   BG_Res <- RS_RF_SRC_H(
   ResponseVar=Ys,
   Covariates=Covariates_all,
   RawData=FDList,
   Stat=STATS ,
   min=Min,
   max=Max,
   Params=PARAMS_1,
   Distribution=DIST_1,
   Params2=PARAMS_2,
   Distribution2=DIST_2,
   type=TYPE,
   m=100,
   k=50,
   ResponseType="Survival",
   RFMethod = c("Bagging"),
   NUM_Covariates=1,
   Block.Size = 10 ,
   SplitRule = c("logrank"),
   Importance= TRUE,
   Ensemble = c("all"),
   Proximity = TRUE,
   VIP_Algorithm = c("RS"))
   ### Summary 
   RS_Summary(Dataset =BG_Res$Result , Outcome_Type = c("Survival"))
}
\references{
\itemize{
 \item \code{1-} : MÃ¶ller, A., Tutz, G., & Gertheiss, J. (2016). Random forests for functional covariates. Journal of Chemometrics, 30(12), 715-725.
 \item \code{2-} : Ishwaran, H., Kogalur, U. B., Blackstone, E. H., & Lauer, M. S. (2008). Random survival forests. The annals of applied statistics, 2(3), 841-860.
 \item \code{3-} : Ishwaran, H., & Lu, M. (2019). Standard errors and confidence intervals for variable importance in random forest regression, classification, and survival. Statistics in medicine, 38(4), 558-582.
}
}
